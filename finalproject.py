import pandas as pd
import requests


url = "https://api.binance.com/api/v3/klines?"

params = {
    "symbol":"BTCUSDT",
    "interval":"1d",
    "limit":100
}

response = requests.get(url, params=params)
data = response.json()

df = pd.DataFrame(data,columns=["timestamp","open","high","low","close",
    "volume","close_time","quote_asset_volume",
    "number_of_trades","taker_buy_base_volume",
    "taker_buy_quote_volume","ignore"])


df["timestamp"] = pd.to_datetime(df["timestamp"],unit="ms")

df.set_index('timestamp',inplace=True)
df.sort_index(inplace=True)

print(df.head())

import matplotlib.pyplot as plt


df["SMA short"] = df["close"].rolling(window=10).mean()
df["SMA long"] = df['close'].rolling(window = 50).mean() #–≤–∏—á–∏—Ç–∞–ª–∞ –ø—Ä–æ rolling –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ, —à—É–∫–∞–ª–∞ —â–æ—Å—å, —â–æ —Ä–∞—Ö—É–≤–∞—Ç–∏–º–µ –≤ –ø—Ä–æ–º—ñ–∂–∫—É

df["signal"] = 0
df.loc[df['SMA short'] > df['SMA long'], "signal"] = 1 #—Ç—Ä–µ–±–∞ –±—Ä–∞—Ç—å
df.loc[df['SMA long'] > df["SMA short"], "signal"] = -1 #—Ç—Ä–µ–±–∞ –ø—Ä–æ–¥–∞—Ç—å

df['position'] = 0
for i in range(1, len(df)):
    df.loc[df.index[i], 'position'] = df.loc[df.index[i - 1], 'signal']



# df["returns"] = 0
# for i in range(1, len(df)):
#     prev = df["close"].iloc[i - 1]
#     curr = df["close"].iloc[i]
#     df.loc[df.index[i], "returns"] = (curr - prev) / prev

# df["returns_strategichni"] = df["returns"] * df['position']
#—è –Ω–∞–º–∞–≥–∞–ª–∞—Å—å —Ü–µ –ø—Ä–æ–ø–∏—Å–∞—Ç–∏ –æ—Å—å —Ç–∞–∫, –∞–ª–µ –≤–æ–Ω–æ –≤–∏–¥–∞—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –º–∞–π–±—É—Ç–Ω—å–æ—ó –ø–æ–º–∏–ª–∫–∏, —Ç–æ–º—É –Ω–µ —Å–∫–ª–∞–ª–æ—Å—å...–±—É–¥—É –≤–¥—è—á–Ω–∞, —è–∫—â–æ –≤ —Ñ—ñ–¥–±–µ–∫ –Ω–∞–ø–∏—à–µ—Ç–µ, —á–æ–º—É —Ç—É—Ç –ø–∞–π—Ç–æ–Ω –ª–∞–º–∞–≤—Å—è :(

cols = ["open", "high", "low", "close", "volume"]
df[cols] = df[cols].astype(float) #–±–æ —ñ–Ω–∞–∫—à–µ —á–µ—Ä–µ–∑ int64 –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º—ñ –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –ø–æ–º–∏–ª–∫–∏

df['returns'] = df['close'].pct_change()
df["returns_strategichni"] = df["returns"] * df['position']

df['cumulative_rynok'] = (1 + df["returns"]).cumprod()
df['cumulative_strategichno'] = (1+df['returns_strategichni']).cumprod()

print("ü©∑–ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ü©∑")
print("–∫—É–ø–∏—Ç–∏ —ñ —á–µ–∫–∞—Ç–∏: {:.2%}".format(df['cumulative_rynok'].iloc[-1]-1))
print("—Å—Ç—Ä–∞—Ç–µ–≥—ñ—á–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏: {:.2%}".format(df['cumulative_strategichno'].iloc[-1]-1))

import matplotlib.pyplot as plt

plt.figure(figsize=(12,6))
plt.plot(df.index, df["cumulative_rynok"], label="–∫—É–ø–∏—Ç–∏ —ñ —á–µ–∫–∞—Ç–∏", linestyle = "--", linewidth = "2")
plt.plot(df.index, df["cumulative_strategichno"], label="—Å—Ç—Ä–∞—Ç–µ–≥—ñ—á–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏", linestyle = "--", linewidth = "2")
plt.title("–ø–æ—Ä—ñ–≤–Ω–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—ñ –¥–≤–æ—Ö –º–µ—Ç–æ–¥—ñ–≤")
plt.xlabel("–¥–∞–Ω—ñ")
plt.ylabel("–∫—É–º—É–ª—è—Ç–∏–≤–Ω–∏–π –¥–æ—Ö—ñ–¥")
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()

#—É –≤–∏—Å–Ω–æ–≤–∫—É, —à–æ—Å—å –ø–æ–≥–∞–Ω–æ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è –ø—Ä–∞—Ü—é—î.......